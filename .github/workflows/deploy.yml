name: Deploy to Production

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

  # Automatic trigger on version tags
  push:
    tags:
      - 'v*.*.*'

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # ============================================================================
  # Build and Push Docker Images
  # ============================================================================
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub (optional)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true

      - name: Extract version from tag
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: ${{ secrets.DOCKER_USERNAME != '' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nexus-analyzer-backend:${{ steps.version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/nexus-analyzer-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: ${{ secrets.DOCKER_USERNAME != '' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nexus-analyzer-frontend:${{ steps.version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/nexus-analyzer-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ============================================================================
  # Deploy to Staging
  # ============================================================================
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event.inputs.environment == 'staging' || github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging.nexus-analyzer.example.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Deploy to staging server
        run: |
          echo "Deploying to staging environment..."
          # Add your staging deployment commands here
          # Example: SSH to server and pull latest images
          # ssh user@staging-server "cd /app && docker compose pull && docker compose up -d"

      - name: Run smoke tests
        run: |
          echo "Running smoke tests on staging..."
          # Add smoke tests here
          # curl -f https://staging.nexus-analyzer.example.com/health

  # ============================================================================
  # Deploy to Production
  # ============================================================================
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event.inputs.environment == 'production' || startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://nexus-analyzer.example.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Deploy to production server
        run: |
          echo "Deploying to production environment..."
          # Add your production deployment commands here
          # Example:
          # ssh user@prod-server "cd /app && docker compose pull && docker compose up -d"

      - name: Run smoke tests
        run: |
          echo "Running smoke tests on production..."
          # Add smoke tests here
          # curl -f https://nexus-analyzer.example.com/health

      - name: Notify deployment success
        run: |
          echo "Production deployment successful!"
          # Add notification logic here (Slack, email, etc.)

  # ============================================================================
  # Database Migrations
  # ============================================================================
  migrate-database:
    name: Run Database Migrations
    runs-on: ubuntu-latest
    needs: deploy-production
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run migrations
        run: |
          echo "Running database migrations..."
          # Add migration commands here
          # Example:
          # ssh user@prod-server "cd /app && docker compose exec backend alembic upgrade head"

  # ============================================================================
  # Rollback (Manual Trigger Only)
  # ============================================================================
  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.rollback == 'true'

    steps:
      - name: Rollback to previous version
        run: |
          echo "Rolling back deployment..."
          # Add rollback logic here
          # Example:
          # ssh user@prod-server "cd /app && docker compose down && git checkout HEAD~1 && docker compose up -d"
