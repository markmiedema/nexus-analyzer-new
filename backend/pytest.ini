[pytest]
# Pytest configuration file

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Paths
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    -ra
    # Show local variables in tracebacks
    --showlocals
    # Strict markers (only allow registered markers)
    --strict-markers
    # Coverage options
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    # Disable warnings summary (too noisy)
    --disable-warnings
    # Run tests in parallel (optional, uncomment if you have pytest-xdist installed)
    # -n auto

# Markers for categorizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, test multiple components)
    e2e: End-to-end tests (slowest, test full workflows)
    auth: Authentication related tests
    api: API endpoint tests
    db: Database tests
    slow: Slow running tests
    security: Security related tests

# Test timeout (requires pytest-timeout)
# timeout = 300

# Coverage configuration
[coverage:run]
source = .
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */alembic/versions/*
    */seeds/*
    */scripts/*

[coverage:report]
# Fail if coverage is below this percentage
fail_under = 70
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @abstractmethod
    @abc.abstractmethod
    # Don't complain about type checking blocks
    if TYPE_CHECKING:
    # Don't complain about pass statements
    pass

[coverage:html]
directory = htmlcov
