"""Initial database schema

Revision ID: df9a1c7e5dba
Revises: 
Create Date: 2025-10-20 23:35:47.632970

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'df9a1c7e5dba'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nexus_rules',
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('nexus_type', sa.Enum('PHYSICAL', 'ECONOMIC', 'AFFILIATE', 'CLICK_THROUGH', name='nexustype'), nullable=False),
    sa.Column('sales_threshold', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('transaction_threshold', sa.Integer(), nullable=True),
    sa.Column('threshold_measurement', sa.Enum('SALES_ONLY', 'TRANSACTIONS_ONLY', 'SALES_OR_TRANSACTIONS', 'SALES_AND_TRANSACTIONS', name='thresholdmeasurement'), nullable=True),
    sa.Column('measurement_period', sa.Enum('CALENDAR_YEAR', 'ROLLING_12_MONTHS', 'PREVIOUS_CALENDAR_YEAR', name='measurementperiod'), nullable=True),
    sa.Column('marketplace_facilitator_law', sa.Boolean(), nullable=False),
    sa.Column('marketplace_sales_excluded', sa.Boolean(), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('rule_description', sa.String(length=1000), nullable=True),
    sa.Column('registration_url', sa.String(length=500), nullable=True),
    sa.Column('rule_source_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('rule_id')
    )
    op.create_index(op.f('ix_nexus_rules_state'), 'nexus_rules', ['state'], unique=False)
    op.create_table('state_tax_config',
    sa.Column('config_id', sa.UUID(), nullable=False),
    sa.Column('state_code', sa.String(length=2), nullable=False),
    sa.Column('state_name', sa.String(length=50), nullable=False),
    sa.Column('state_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('avg_local_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('min_combined_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('max_combined_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('has_sales_tax', sa.Boolean(), nullable=False),
    sa.Column('sales_tax_name', sa.String(length=100), nullable=True),
    sa.Column('is_destination_based', sa.Boolean(), nullable=False),
    sa.Column('is_origin_based', sa.Boolean(), nullable=False),
    sa.Column('has_local_taxes', sa.Boolean(), nullable=False),
    sa.Column('local_tax_administered_by_state', sa.Boolean(), nullable=False),
    sa.Column('filing_frequency_options', sa.Text(), nullable=True),
    sa.Column('filing_threshold_for_frequency', sa.Text(), nullable=True),
    sa.Column('default_lookback_months', sa.String(length=10), nullable=False),
    sa.Column('late_filing_penalty_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('late_payment_penalty_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('interest_rate_annual', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('common_exemptions', sa.Text(), nullable=True),
    sa.Column('registration_url', sa.String(length=500), nullable=True),
    sa.Column('tax_agency_name', sa.String(length=255), nullable=True),
    sa.Column('tax_agency_website', sa.String(length=500), nullable=True),
    sa.Column('special_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('config_id')
    )
    op.create_index(op.f('ix_state_tax_config_state_code'), 'state_tax_config', ['state_code'], unique=True)
    op.create_table('tenants',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('subdomain', sa.String(length=63), nullable=False),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('primary_color', sa.String(length=7), nullable=True),
    sa.Column('secondary_color', sa.String(length=7), nullable=True),
    sa.Column('subscription_plan', sa.Enum('FREE', 'STARTER', 'PROFESSIONAL', 'ENTERPRISE', name='subscriptionplan'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'TRIAL', 'CANCELLED', name='tenantstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_index(op.f('ix_tenants_status'), 'tenants', ['status'], unique=False)
    op.create_index(op.f('ix_tenants_subdomain'), 'tenants', ['subdomain'], unique=True)
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'ANALYST', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.String(length=10), nullable=False),
    sa.Column('email_verified', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('analyses',
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('client_name', sa.String(length=255), nullable=False),
    sa.Column('analysis_date', sa.Date(), server_default=sa.text('CURRENT_DATE'), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'UPLOADING', 'PROCESSING_CSV', 'PROCESSING_NEXUS', 'PROCESSING_LIABILITY', 'GENERATING_REPORT', 'COMPLETED', 'FAILED', 'CANCELLED', name='analysisstatus'), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('csv_file_path', sa.String(length=500), nullable=True),
    sa.Column('validation_report_path', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('analysis_id')
    )
    op.create_index(op.f('ix_analyses_created_by'), 'analyses', ['created_by'], unique=False)
    op.create_index(op.f('ix_analyses_status'), 'analyses', ['status'], unique=False)
    op.create_index(op.f('ix_analyses_tenant_id'), 'analyses', ['tenant_id'], unique=False)
    op.create_table('audit_log',
    sa.Column('log_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('meta_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('success', sa.String(length=10), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.tenant_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_audit_log_action'), 'audit_log', ['action'], unique=False)
    op.create_index('ix_audit_log_action_created', 'audit_log', ['action', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_log_created_at'), 'audit_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_log_resource_id'), 'audit_log', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_log_resource_type'), 'audit_log', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_log_success'), 'audit_log', ['success'], unique=False)
    op.create_index('ix_audit_log_tenant_created', 'audit_log', ['tenant_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_log_tenant_id'), 'audit_log', ['tenant_id'], unique=False)
    op.create_index('ix_audit_log_user_created', 'audit_log', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_log_user_id'), 'audit_log', ['user_id'], unique=False)
    op.create_table('business_profiles',
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('legal_business_name', sa.String(length=255), nullable=False),
    sa.Column('doing_business_as', sa.String(length=255), nullable=True),
    sa.Column('federal_ein', sa.String(length=20), nullable=True),
    sa.Column('business_structure', sa.String(length=50), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('naics_code', sa.String(length=10), nullable=True),
    sa.Column('has_physical_presence', sa.Boolean(), nullable=False),
    sa.Column('has_employees', sa.Boolean(), nullable=False),
    sa.Column('has_inventory', sa.Boolean(), nullable=False),
    sa.Column('uses_marketplace_facilitators', sa.Boolean(), nullable=False),
    sa.Column('marketplace_facilitator_names', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('sells_tangible_goods', sa.Boolean(), nullable=False),
    sa.Column('sells_digital_goods', sa.Boolean(), nullable=False),
    sa.Column('sells_services', sa.Boolean(), nullable=False),
    sa.Column('has_exempt_sales', sa.Boolean(), nullable=False),
    sa.Column('exempt_customer_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_index(op.f('ix_business_profiles_analysis_id'), 'business_profiles', ['analysis_id'], unique=True)
    op.create_table('liability_estimates',
    sa.Column('estimate_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('gross_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('marketplace_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('exempt_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('taxable_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('state_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('avg_local_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('combined_tax_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('estimated_liability_low', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('estimated_liability_high', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('estimated_liability_mid', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('lookback_period_months', sa.Integer(), nullable=True),
    sa.Column('lookback_liability', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('estimated_penalty_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('estimated_interest_rate', sa.Numeric(precision=5, scale=4), nullable=False),
    sa.Column('estimated_penalty_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('estimated_interest_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_estimated_liability', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('exemption_rate_assumed', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('assumptions_notes', sa.Text(), nullable=True),
    sa.Column('risk_level', sa.Enum('HIGH', 'MEDIUM', 'LOW', name='risklevel'), nullable=False),
    sa.Column('risk_factors', sa.Text(), nullable=True),
    sa.Column('recommended_action', sa.String(length=50), nullable=True),
    sa.Column('action_priority', sa.Integer(), nullable=True),
    sa.Column('recommendation_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('estimate_id')
    )
    op.create_index(op.f('ix_liability_estimates_analysis_id'), 'liability_estimates', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_liability_estimates_state'), 'liability_estimates', ['state'], unique=False)
    op.create_table('nexus_results',
    sa.Column('result_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('has_physical_nexus', sa.Boolean(), nullable=False),
    sa.Column('has_economic_nexus', sa.Boolean(), nullable=False),
    sa.Column('overall_determination', sa.Enum('HAS_NEXUS', 'NO_NEXUS', 'CLOSE_TO_THRESHOLD', name='nexusdetermination'), nullable=False),
    sa.Column('total_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('total_transactions', sa.Integer(), nullable=False),
    sa.Column('marketplace_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('non_marketplace_sales', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('sales_threshold', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('transaction_threshold', sa.Integer(), nullable=True),
    sa.Column('sales_threshold_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('transaction_threshold_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('nexus_established_date', sa.Date(), nullable=True),
    sa.Column('registration_deadline', sa.Date(), nullable=True),
    sa.Column('confidence_level', sa.Enum('HIGH', 'MEDIUM', 'LOW', name='confidencelevel'), nullable=False),
    sa.Column('determination_notes', sa.Text(), nullable=True),
    sa.Column('warnings', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('result_id')
    )
    op.create_index(op.f('ix_nexus_results_analysis_id'), 'nexus_results', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_nexus_results_overall_determination'), 'nexus_results', ['overall_determination'], unique=False)
    op.create_index(op.f('ix_nexus_results_state'), 'nexus_results', ['state'], unique=False)
    op.create_table('reports',
    sa.Column('report_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('report_type', sa.Enum('EXECUTIVE_SUMMARY', 'DETAILED_ANALYSIS', 'STATE_BY_STATE', 'CUSTOM', name='reporttype'), nullable=False),
    sa.Column('report_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size_bytes', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'GENERATING', 'COMPLETED', 'FAILED', name='reportstatus'), nullable=False),
    sa.Column('error_message', sa.String(length=1000), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_index(op.f('ix_reports_analysis_id'), 'reports', ['analysis_id'], unique=False)
    op.create_table('transactions',
    sa.Column('transaction_id', sa.UUID(), nullable=False),
    sa.Column('analysis_id', sa.UUID(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('customer_state', sa.String(length=2), nullable=False),
    sa.Column('gross_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('tax_collected', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('shipping_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('is_marketplace_sale', sa.Boolean(), nullable=False),
    sa.Column('is_exempt_sale', sa.Boolean(), nullable=False),
    sa.Column('customer_id', sa.String(length=100), nullable=True),
    sa.Column('order_id', sa.String(length=100), nullable=True),
    sa.Column('product_category', sa.String(length=100), nullable=True),
    sa.Column('exemption_reason', sa.String(length=100), nullable=True),
    sa.Column('marketplace_name', sa.String(length=100), nullable=True),
    sa.Column('original_row_number', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['analysis_id'], ['analyses.analysis_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_index('ix_transactions_analysis_date', 'transactions', ['analysis_id', 'transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_analysis_id'), 'transactions', ['analysis_id'], unique=False)
    op.create_index('ix_transactions_analysis_state', 'transactions', ['analysis_id', 'customer_state'], unique=False)
    op.create_index(op.f('ix_transactions_customer_state'), 'transactions', ['customer_state'], unique=False)
    op.create_index(op.f('ix_transactions_is_marketplace_sale'), 'transactions', ['is_marketplace_sale'], unique=False)
    op.create_index(op.f('ix_transactions_marketplace_name'), 'transactions', ['marketplace_name'], unique=False)
    op.create_index(op.f('ix_transactions_order_id'), 'transactions', ['order_id'], unique=False)
    op.create_index('ix_transactions_state_date', 'transactions', ['customer_state', 'transaction_date'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_date'), 'transactions', ['transaction_date'], unique=False)
    op.create_table('physical_locations',
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('location_type', sa.Enum('OFFICE', 'WAREHOUSE', 'RETAIL_STORE', 'MANUFACTURING', 'REMOTE_EMPLOYEE', 'OTHER', name='locationtype'), nullable=False),
    sa.Column('address_line1', sa.String(length=255), nullable=False),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('established_date', sa.Date(), nullable=True),
    sa.Column('closed_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['business_profiles.profile_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('location_id')
    )
    op.create_index(op.f('ix_physical_locations_profile_id'), 'physical_locations', ['profile_id'], unique=False)
    op.create_index(op.f('ix_physical_locations_state'), 'physical_locations', ['state'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_physical_locations_state'), table_name='physical_locations')
    op.drop_index(op.f('ix_physical_locations_profile_id'), table_name='physical_locations')
    op.drop_table('physical_locations')
    op.drop_index(op.f('ix_transactions_transaction_date'), table_name='transactions')
    op.drop_index('ix_transactions_state_date', table_name='transactions')
    op.drop_index(op.f('ix_transactions_order_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_marketplace_name'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_is_marketplace_sale'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_customer_state'), table_name='transactions')
    op.drop_index('ix_transactions_analysis_state', table_name='transactions')
    op.drop_index(op.f('ix_transactions_analysis_id'), table_name='transactions')
    op.drop_index('ix_transactions_analysis_date', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_reports_analysis_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_nexus_results_state'), table_name='nexus_results')
    op.drop_index(op.f('ix_nexus_results_overall_determination'), table_name='nexus_results')
    op.drop_index(op.f('ix_nexus_results_analysis_id'), table_name='nexus_results')
    op.drop_table('nexus_results')
    op.drop_index(op.f('ix_liability_estimates_state'), table_name='liability_estimates')
    op.drop_index(op.f('ix_liability_estimates_analysis_id'), table_name='liability_estimates')
    op.drop_table('liability_estimates')
    op.drop_index(op.f('ix_business_profiles_analysis_id'), table_name='business_profiles')
    op.drop_table('business_profiles')
    op.drop_index(op.f('ix_audit_log_user_id'), table_name='audit_log')
    op.drop_index('ix_audit_log_user_created', table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_tenant_id'), table_name='audit_log')
    op.drop_index('ix_audit_log_tenant_created', table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_success'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_resource_type'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_resource_id'), table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_created_at'), table_name='audit_log')
    op.drop_index('ix_audit_log_action_created', table_name='audit_log')
    op.drop_index(op.f('ix_audit_log_action'), table_name='audit_log')
    op.drop_table('audit_log')
    op.drop_index(op.f('ix_analyses_tenant_id'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_status'), table_name='analyses')
    op.drop_index(op.f('ix_analyses_created_by'), table_name='analyses')
    op.drop_table('analyses')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tenants_subdomain'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_status'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_state_tax_config_state_code'), table_name='state_tax_config')
    op.drop_table('state_tax_config')
    op.drop_index(op.f('ix_nexus_rules_state'), table_name='nexus_rules')
    op.drop_table('nexus_rules')
    # ### end Alembic commands ###
