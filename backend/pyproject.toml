[tool.black]
# Black code formatter configuration
line-length = 127
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    # directories
    \.git
  | \.venv
  | venv
  | env
  | __pycache__
  | \.pytest_cache
  | \.mypy_cache
  | htmlcov
  | dist
  | build
  | \.egg-info
  | alembic/versions
)/
'''

[tool.isort]
# isort import sorting configuration
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/__pycache__/*",
    "*/alembic/versions/*",
]

[tool.pytest.ini_options]
# Pytest configuration (alternative to pytest.ini)
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
# Coverage configuration
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
    "*/alembic/versions/*",
    "*/seeds/*",
    "*/scripts/*",
]

[tool.coverage.report]
# Coverage reporting
precision = 2
show_missing = true
skip_covered = false
fail_under = 70

exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
    "@abc.abstractmethod",
    "if TYPE_CHECKING:",
    "pass",
]

[tool.mypy]
# MyPy static type checking configuration
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
